Zadatak 1
void Prekopiraj (const int *izvor, int *odrediste, int n)
{
    while(n--)
        *(odrediste++) = *(izvor++);
}


Predavanje 16
char* podstring(char* s1, char* s2) {
    while (*s1 != '\0') {
        char* p = s1;
        char* q = s2;
        while (*p++ == *q++)
            if (*q == '\0') return s1;
        s1++;
    }
    return NULL;
}

Predavanje 16

char sbroj[12];
int i=0, tmp=broj;
/* prebrojavamo cifre */
while (tmp != 0) {
    i++;
    tmp /= 10;
}
sbroj[i--] = '\0';
while (broj != 0) {
    sbroj[i--] = broj % 10 + '0';
    broj /= 10;
}


Broj rijeci u stringu
bool isalpha(char c)
{
    return ('a' <= c && c <= 'z') || ('A' <= c && c <= 'Z');
}

int br = 0;
int raz = 1;
while(*s!='\0')
{
    if (!isalpha(*s))
        raz=1;
    else if (raz==1)
    {
        raz=0;
        br++;
    }
    s++;
}


Trazenje broja u stringu
int trazi_broj(char* s, int broj)
{
    while (*s != '\0') {
        if (*s >= '0' && *s <='9') {
            p=s;
            while (*p >= '0' && *p <= '9')
                p++;
            s = p-1;
            tmp = abs(broj);
            do {
                cifra = tmp % 10 + '0';
                p--;
                if (*p != cifra) break;
                tmp /= 10;
            } while (tmp != 0);
            if (tmp == 0 && broj < 0 && *p=='-') return 1;
            if (tmp == 0 && broj >= 0) return 1;
        }
        s++;
    }
}


Zadatak 8

/*
1 3
3 5
1 2 3 4 6 6
*/

int *f1(int *p)
{
    return p++;
}
int *f2(int *p)
{
    return ++p;
}

int f3(int *p)
{
    return *p++;
}
int f4(int *p)
{
    return (*p)++;
}
int main()
{
    int i;
    int niz[] = {1, 2, 3, 4, 5, 6};
    printf("%d %d\n", *f1(niz), *f2(niz + 1));
    printf("%d %d\n", f3(f1(niz + 2)), f4(f2(niz + 3)));
    for (i = 0; i < 6; i++)
        printf("%d ", niz[i]);
    return 0;
}


void Razmijeni(int *pok1, int *pok2) {
    int pomocna(*pok1);
    *pok1 = *pok2;
    *pok2 = pomocna;
}
Razmijeni(&a, &b);

